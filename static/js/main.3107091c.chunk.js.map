{"version":3,"sources":["components/PointsForm/index.js","containers/Version/index.js","components/AppBarDrawerMenu/index.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["PointsForm","_this","this","_this$props","props","_this$props$versionDa","versionData","name","fields","classes","reactn_default","a","createElement","Fragment","Card_default","className","card","Object","keys","map","field","key","concat","checkbox","FormControlLabel_default","control","Checkbox_default","id","checked","global","formData","onChange","e","setGlobal","objectSpread","defineProperty","target","color","label","text","TextField_default","type","margin","value","InputProps","endAdornment","InputAdornment_default","position","unitPoints","filter","includes","reduce","acc","Component","defaultProps","withStyles","minWidth","padding","Version","_this$props$version","version","versionFields","obj","components_PointsForm","AppBarDrawerMenu","state","open","handleDrawerOpen","setState","handleDrawerClose","theme","children","versions","routes","react_default","root","CssBaseline_default","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","IconButton_default","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","button","component","Link","to","path","ListItemText_default","primary","content","contentShift","React","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","alignItems","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","home","App","_this$global$formFiel","formFields","components_AppBarDrawerMenu","Route","exact","render","Version_Version","Boolean","window","location","hostname","match","storeInit","formFieldSchema","forEach","count","console","log","process","ReactDOM","BrowserRouter","basename","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3107091c.chunk.js","sourcesContent":["import React, { Component, setGlobal } from 'reactn';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n    padding: '10px 30px',\r\n  },\r\n};\r\n\r\nclass PointsForm extends Component {\r\n  render() {\r\n    const {\r\n      versionData: { name, fields },\r\n      classes,\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1>{name}</h1>\r\n        <Card className={classes.card}>\r\n          {Object.keys(fields).map(field => (\r\n            <div key={`field-key-${field}`}>\r\n              {fields[field].checkbox ? (\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      id={field}\r\n                      checked={!!this.global.formData[field]}\r\n                      onChange={e => setGlobal({\r\n                        formData: { ...this.global.formData, [e.target.id]: e.target.checked },\r\n                      })\r\n                      }\r\n                      color=\"primary\"/>\r\n                  }\r\n                  label={fields[field].text}/>\r\n              ) : (\r\n                <TextField\r\n                  id={field}\r\n                  label={fields[field].text}\r\n                  type=\"number\"\r\n                  margin=\"dense\"\r\n                  value={this.global.formData[field]}\r\n                  onChange={e => setGlobal({\r\n                    formData: { ...this.global.formData, [e.target.id]: e.target.value },\r\n                  })\r\n                  }\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">x{fields[field].unitPoints}pts</InputAdornment>\r\n                    ),\r\n                  }}/>\r\n              )}\r\n            </div>\r\n          ))}\r\n          <div>\r\n            <h4>Points</h4>\r\n            <h1>\r\n              {Object.keys(this.global.formData)\r\n                .filter(field => Object.keys(fields).includes(field))\r\n                .reduce(\r\n                  (acc, field) => this.global.formData[field] * fields[field].unitPoints + acc,\r\n                  0,\r\n                )}\r\n            </h1>\r\n          </div>\r\n        </Card>\r\n        {/* {Object.keys(fields).map(field => (\r\n          <div key={`demo-${field}`}>\r\n            {fields[field].text}: <code>{this.global.formData[field]}</code>\r\n          </div>\r\n        ))} */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPointsForm.defaultProps = {};\r\n\r\nPointsForm.propTypes = {\r\n  versionData: PropTypes.shape({}).isRequired,\r\n  classes: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PointsForm);\r\n","import React, { Component } from 'reactn';\r\nimport PropTypes from 'prop-types';\r\nimport PointsForm from '../../components/PointsForm';\r\n\r\nexport default class Version extends Component {\r\n  render() {\r\n    const { version: { name, versionFields }, fields } = this.props;\r\n\r\n    const filteredFields = Object.keys(fields)\r\n      .filter(key => versionFields.includes(key))\r\n      .reduce((obj, key) => {\r\n        const newObj = { ...obj, [key]: fields[key] };\r\n        return newObj;\r\n      }, {});\r\n\r\n    const versionData = {\r\n      name,\r\n      fields: filteredFields,\r\n    };\r\n    return <PointsForm versionData={versionData} />;\r\n  }\r\n}\r\n\r\nVersion.defaultProps = {\r\n  // versionFields: [],\r\n  fields: {},\r\n};\r\n\r\nVersion.propTypes = {\r\n  version: PropTypes.shape({}).isRequired,\r\n  // name: PropTypes.string.isRequired,\r\n  // versionFields: PropTypes.arrayOf(PropTypes.string),\r\n  fields: PropTypes.shape({}),\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n});\r\n\r\nclass AppBarDrawerMenu extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes, theme, children, versions, routes,\r\n    } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}>\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Ticket To Ride Calculator\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          onClick={this.handleDrawerClose}>\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {Object.keys(routes).map(key => (\r\n              <ListItem button key={`drawerListItem-${key}`} component={Link} to={routes[key].path}>\r\n                  <ListItemText primary={routes[key].name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {Object.keys(versions).map(key => (\r\n              <ListItem button key={`drawerListItem-${key}`} component={Link} to={versions[key].path}>\r\n                <ListItemText primary={versions[key].name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}>\r\n          <div className={classes.drawerHeader} />\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppBarDrawerMenu.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nAppBarDrawerMenu.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  theme: PropTypes.shape({}).isRequired,\r\n  children: PropTypes.node,\r\n  versions: PropTypes.shape({}).isRequired,\r\n  routes: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AppBarDrawerMenu);\r\n\r\n// export default withStyles(styles)(AppBarDrawerMenu);\r\n","import React, { Component } from 'reactn';\r\nimport { Route } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Version from './containers/Version';\r\nimport AppBarDrawerMenu from './components/AppBarDrawerMenu';\r\n\r\nconst routes = {\r\n  home: {\r\n    path: '/',\r\n    name: 'Home',\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const {\r\n      formFields: { versions, fields },\r\n    } = this.global;\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBarDrawerMenu versions={versions} routes={routes}>\r\n          <Route path=\"/\" exact render={() => <div>Home</div>} />\r\n          {Object.keys(versions).map(version => (\r\n            <Route\r\n              key={`route-${version}`}\r\n              path={versions[version].path}\r\n              exact\r\n              render={() => <Version version={versions[version]} fields={fields} />}/>\r\n          ))}\r\n        </AppBarDrawerMenu>\r\n\r\n        {/* {Object.keys()versions.map(version => (\r\n          <Route\r\n            key={`route-${version.key()}`}\r\n            path={route.path}\r\n            exact\r\n            render={() => (\r\n              <Version version={route.id} />\r\n            )}/>\r\n        ))} */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { setGlobal } from 'reactn';\r\nimport formFieldSchema from '../formFieldSchema.json';\r\n\r\nconst storeInit = () => {\r\n  const formData = {};\r\n  Object.keys(formFieldSchema.fields).forEach((field) => {\r\n    formData[field] = 0;\r\n  });\r\n\r\n  setGlobal({\r\n    count: 1,\r\n    formFields: formFieldSchema,\r\n    formData,\r\n  });\r\n};\r\n\r\nexport default storeInit;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport storeInit from './store';\r\nimport './index.css';\r\n\r\nstoreInit();\r\n\r\nconst basename = process.env.PUBLIC_URL;\r\nconsole.log('basename: ', basename);\r\n\r\nReactDOM.render(\r\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}